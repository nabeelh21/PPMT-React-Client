{"version":3,"sources":["actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/userReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","actions/userActions.js","components/UserManagement/MyProfile.js","components/UserManagement/Admin.js","components/UserManagement/UpdateUser.js","components/UserManagement/ChangePassword.js","components/UserManagement/UpdateSuccessMessage.js","App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","users","combineReducers","action","filter","backlog","projectSequence","username","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","password","confirmPassword","newUser","createNewUser","autoComplete","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","getUser","MyProfile","deleteUser","Admin","adminDeleteUser","getUsers","UpdateUser","update_At","updateUser","createUser","ChangePassword","UpdateSuccessMessage","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d1e2c0d5.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Types for BACKLOG ACTIONS\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const GET_USERS = \"GET_USERS\";\r\nexport const GET_USER = \"GET_USER\";\r\nexport const DELETE_USER = \"DELETE_USER\";\r\nexport const UPDATE_USER = \"UPDATE_USER\";\r\nexport const ADMIN_DELETE_USER = \"DELETE_USER\";\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async (dispatch) => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = (id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project and all the data related to it\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-sm-12 col-md-4 d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n\r\n              <br />\r\n              <hr />\r\n              {projects.map((project) => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (LoginRequest) => async (dispatch) => {\r\n  try {\r\n    // post => Login Request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n    // store the token in the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set our token in header ***\r\n    setJWTToken(token);\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n    // dispatch to our securityReducer\r\n\r\n    //Get Users Roles\r\n\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {},\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/myProfile\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectName,\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier,\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description,\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload,\r\n      };\r\n\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          (project) => project.projectIdentifier !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload,\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          (project_task) => project_task.projectSequence !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {},\r\n};\r\n\r\nconst booleanActionPayload = (payload) => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_USERS,\r\n  GET_USER,\r\n  DELETE_USER,\r\n  ADMIN_DELETE_USER,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  user: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    case DELETE_USER:\r\n      return {\r\n        ...state,\r\n        users: state.users.filter((user) => user.username !== action.payload),\r\n      };\r\n    case ADMIN_DELETE_USER:\r\n      return {\r\n        ...state,\r\n        users: state.users.filter((user) => user.username !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer,\r\n  user: userReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName,\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectIdentifier,\r\n                    })}\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.projectIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.description}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project.project,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired,\r\n};\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"./types\";\r\n\r\n//Fix bug with priority in Spring Boot Server, needs to check null first\r\nexport const addProjectTask = (backlog_id, project_task, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = (backlog_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task,\r\n  history\r\n) => async (dispatch) => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting project task ${pt_id}, this action cannot be undone`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n\r\n    const tasks = project_tasks_prop.map((project_task) => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      //console.log(tasks[i]);\r\n\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>To Do</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n            {\r\n              // insert tasks here\r\n            }\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  //constructor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        //PROJECT IDENTIFIER BUG\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // on change\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  //on submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n    };\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask,\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At,\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At,\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At,\r\n    };\r\n\r\n    // console.log(UpdateProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\r\n                {this.state.projectSequence}{\" \"}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName,\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    autoComplete=\"name\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    autoComplete=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    autoComplete=\"new-password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    autoComplete=\"new-password\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  security: state.security,\r\n});\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    autoComplete=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={(props) =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_USERS,\r\n  GET_USER,\r\n  DELETE_USER,\r\n  GET_ERRORS,\r\n  ADMIN_DELETE_USER,\r\n} from \"./types\";\r\n\r\nexport const updateUser = (user, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/users/update\", user);\r\n    history.push(\"/successMessage\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUsers = () => async (dispatch) => {\r\n  const res = await axios.get(\"/api/users/all\");\r\n  dispatch({\r\n    type: GET_USERS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const getUser = (username, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/users/${username}`);\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/admin\");\r\n  }\r\n};\r\n\r\nexport const adminDeleteUser = (username) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the account and all its data!\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/users/${username}`);\r\n    dispatch({\r\n      type: ADMIN_DELETE_USER,\r\n      payload: username,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (username) => async (dispatch) => {\r\n  await axios.delete(`/api/users/${username}`);\r\n  dispatch({\r\n    type: DELETE_USER,\r\n    payload: username,\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteUser, getUser } from \"../../actions/userActions\";\r\nimport { logout } from \"../../actions/securityActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass MyProfile extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      create_At: \"\",\r\n    };\r\n  }\r\n\r\n  onDeleteClick(username) {\r\n    if (\r\n      window.confirm(\r\n        \"Are you sure? This will delete your account and all your data!\"\r\n      )\r\n    ) {\r\n      this.props.deleteUser(username);\r\n      this.logout();\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { username, fullName, create_At } = nextProps.user;\r\n\r\n    this.setState({\r\n      username,\r\n      fullName,\r\n      create_At,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { user } = this.props.security;\r\n    this.props.getUser(user.username, this.props.history);\r\n  }\r\n\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 m-auto\">\r\n            <h5 className=\"display-4 text-center\">My Profile</h5>\r\n            <hr />\r\n            <div className=\"form-group\">\r\n              <label>Username:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control form-control-lg \"\r\n                placeholder=\"Username\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                disabled\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Full Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control form-control-lg \"\r\n                placeholder=\"Full Name\"\r\n                name=\"fullName\"\r\n                value={this.state.fullName}\r\n                disabled\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Account Created On:</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control form-control-lg \"\r\n                placeholder=\"Created On\"\r\n                name=\"create_At\"\r\n                value={this.state.create_At}\r\n                disabled\r\n              />\r\n            </div>\r\n            <Link to={`/changePassword/${this.state.username}`}>\r\n              <button>\r\n                <i className=\"fa fa-edit pr-1\"> Change Password</i>\r\n              </button>\r\n            </Link>{\" \"}\r\n            <button\r\n              onClick={this.onDeleteClick.bind(this, this.state.username)}\r\n            >\r\n              <i className=\"fa fa-minus-circle pr-1\"> Delete My Account</i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMyProfile.propTypes = {\r\n  getUser: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  user: state.user.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteUser, logout, getUser })(\r\n  MyProfile\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { getUsers, adminDeleteUser } from \"../../actions/userActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Admin extends Component {\r\n  onDeleteClick(username) {\r\n    this.props.adminDeleteUser(username);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getUsers();\r\n  }\r\n  render() {\r\n    const { users } = this.props.users;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <h1 className=\"display-4 text-center\">Manage Users</h1>\r\n            <br />\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Username</th>\r\n                  <th>Full Name</th>\r\n                  <th>Account Created</th>\r\n                  <th>Delete</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {users.map((user) => (\r\n                  <tr key={user.id}>\r\n                    <td>{user.username}</td>\r\n                    <td>{user.fullName}</td>\r\n                    <td>{user.create_At}</td>\r\n                    <td>\r\n                      <Link to={\"/admin\"}>\r\n                        <i\r\n                          onClick={this.onDeleteClick.bind(this, user.username)}\r\n                          className=\"fa fa-minus-circle pr-1\"\r\n                        >\r\n                          {\" \"}\r\n                          Delete User\r\n                        </i>\r\n                      </Link>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n            <br />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAdmin.propTypes = {\r\n  getUsers: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  users: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUsers, adminDeleteUser })(Admin);\r\n","import React, { Component } from \"react\";\r\nimport { getUser } from \"../../actions/userActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateUser extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      create_At: \"\",\r\n      update_At: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      username,\r\n      fullName,\r\n      password,\r\n      confirmPassword,\r\n      create_At,\r\n    } = nextProps.user;\r\n\r\n    this.setState({\r\n      id,\r\n      username,\r\n      fullName,\r\n      password,\r\n      confirmPassword,\r\n      create_At,\r\n    });\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateUser = {\r\n      id: this.state.id,\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n    };\r\n\r\n    this.props.createUser(updateUser, this.props.history);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { username } = this.props.match.params;\r\n    this.props.getUser(username, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update User Info</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label>Username:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg \"\r\n                    placeholder=\"Username\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Full Name:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectIdentifier,\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Account Creation Date:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg \"\r\n                    placeholder=\"Account Created\"\r\n                    name=\"create_At\"\r\n                    value={this.state.create_At}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateUser.propTypes = {\r\n  getUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUser })(UpdateUser);\r\n","import React, { Component } from \"react\";\r\nimport { getUser, updateUser } from \"../../actions/userActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass ChangePassword extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      create_At: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const { id, username, fullName, create_At } = nextProps.user;\r\n\r\n    this.setState({\r\n      id,\r\n      username,\r\n      fullName,\r\n      create_At,\r\n    });\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateUser = {\r\n      id: this.state.id,\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n      create_At: this.state.create_At,\r\n    };\r\n    this.props.updateUser(updateUser, this.props.history);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { username } = this.props.match.params;\r\n    this.props.getUser(username, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Change Password</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label>Username:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg \"\r\n                    placeholder=\"Username\"\r\n                    name=\"username\"\r\n                    autoComplete=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Full Name:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.fullName,\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    autoComplete=\"name\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>New Password:</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    autoComplete=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Confirm New Password:</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.confirmPassword,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    autoComplete=\"password\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nChangePassword.propTypes = {\r\n  getUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  updateUser: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  user: state.user.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUser, updateUser })(\r\n  ChangePassword\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { getUser } from \"../../actions/userActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass UpdateSuccessMessage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <p className=\" text-center\">Password Successfully Updated</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUser })(UpdateSuccessMessage);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\nimport MyProfile from \"./components/UserManagement/MyProfile\";\nimport Admin from \"./components/UserManagement/Admin\";\nimport UpdateUser from \"./components/UserManagement/UpdateUser\";\nimport ChangePassword from \"./components/UserManagement/ChangePassword\";\nimport UpdateSuccessMessage from \"./components/UserManagement/UpdateSuccessMessage\";\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken,\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public Routes\n            }\n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              //Private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/myProfile\" component={MyProfile} />\n              <SecuredRoute exact path=\"/admin\" component={Admin} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateUser/:username\"\n                component={UpdateUser}\n              />\n              <SecuredRoute\n                exact\n                path=\"/changePassword/:username\"\n                component={ChangePassword}\n              />\n              <SecuredRoute\n                exact\n                path=\"/successMessage\"\n                component={UpdateSuccessMessage}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}